{"version":3,"sources":["constants/prefContants.js","url/requestURL.js","actions/prefAction.js","components/CheckBox.js","components/MyChart.js","App.js","store.js","reducers/prefReducer.js","index.js"],"names":["PREFECTURE_LIST_REQUEST","PREFECTURE_LIST_SUCCESS","PREFECTURE_LIST_FAIL_SERVER","PREFECTURE_LIST_FAIL_USER","ADD_TO_POPULATION_LIST_SUCCESS","ADD_TO_POPULATION_LIST_FAIL","REMOVE_TO_POPULATION_LIST","API_KEY","separateData","result","prefCode","prefName","temp1","temp2","temp3","temp4","data","forEach","d","push","value","myList","id","name","boundaryYear","label","dataList","years","element","year","CheckBox","props","prefecture","dispatch","useDispatch","type","onChange","e","target","checked","a","axios","get","headers","payload","message","getState","removeToDataList","htmlFor","MyChart","useSelector","state","list","color","randomColor","demo","labels","datasets","borderColor","backgroundColor","yAxisID","length","addData","console","log","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","legend","position","scales","x","ticks","maxTicksLimit","y","y1","grid","drawOnChartArea","App","useEffect","prefectureList","loading","error","prefectures","className","map","reducer","combineReducers","action","filter","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2451b17.chunk.js","sourcesContent":["export const PREFECTURE_LIST_REQUEST = \"PREFECTURE_LIST_REQUEST\";\r\nexport const PREFECTURE_LIST_SUCCESS = \"PREFECTURE_LIST_SUCCESS\";\r\nexport const PREFECTURE_LIST_FAIL_SERVER = \"PREFECTURE_LIST_FAIL_SERVER\";\r\nexport const PREFECTURE_LIST_FAIL_USER = \"PREFECTURE_LIST_FAIL_USER\";\r\n\r\nexport const ADD_TO_POPULATION_LIST_SUCCESS = \"ADD_TO_POPULATION_LIST_SUCCESS\";\r\nexport const ADD_TO_POPULATION_LIST_FAIL = \"ADD_TO_POPULATION_LIST_FAIL\";\r\nexport const REMOVE_TO_POPULATION_LIST = \"REMOVE_TO_POPULATION_LIST\";\r\n","export const API_KEY = \"bkdMhcii8aiAnbU5YGZsCYG0zwLo1N8DdjcoJCmf\";\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_TO_POPULATION_LIST_FAIL,\r\n  ADD_TO_POPULATION_LIST_SUCCESS,\r\n  PREFECTURE_LIST_FAIL_SERVER,\r\n  PREFECTURE_LIST_FAIL_USER,\r\n  PREFECTURE_LIST_REQUEST,\r\n  PREFECTURE_LIST_SUCCESS,\r\n  REMOVE_TO_POPULATION_LIST,\r\n} from \"../constants/prefContants\";\r\nimport { API_KEY } from \"../url/requestURL\";\r\n\r\nexport const getPrefList = () => async (dispatch) => {\r\n  dispatch({\r\n    type: PREFECTURE_LIST_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://opendata.resas-portal.go.jp/api/v1/prefectures\",\r\n      { headers: { \"X-API-KEY\": API_KEY } }\r\n    );\r\n\r\n    if (data.message) {\r\n      dispatch({ type: PREFECTURE_LIST_FAIL_SERVER, payload: data });\r\n    } else {\r\n      dispatch({ type: PREFECTURE_LIST_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PREFECTURE_LIST_FAIL_USER,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nfunction separateData(result, prefCode, prefName) {\r\n  let temp1 = [];\r\n  let temp2 = [];\r\n  let temp3 = [];\r\n  let temp4 = [];\r\n\r\n  result.data[0].data.forEach((d) => {\r\n    temp1.push(d.value);\r\n  });\r\n  result.data[1].data.forEach((d) => {\r\n    temp2.push(d.value);\r\n  });\r\n  result.data[2].data.forEach((d) => {\r\n    temp3.push(d.value);\r\n  });\r\n  result.data[3].data.forEach((d) => {\r\n    temp4.push(d.value);\r\n  });\r\n\r\n  const myList = {\r\n    id: prefCode,\r\n    name: prefName,\r\n    boundaryYear: result.boundaryYear,\r\n    data: [\r\n      {\r\n        label: prefName + \"-\" + result.data[0].label,\r\n        dataList: temp1,\r\n      },\r\n      {\r\n        label: prefName + \"-\" + result.data[1].label,\r\n        dataList: temp2,\r\n      },\r\n      {\r\n        label: prefName + \"-\" + result.data[2].label,\r\n        dataList: temp3,\r\n      },\r\n      {\r\n        label: prefName + \"-\" + result.data[3].label,\r\n        dataList: temp4,\r\n      },\r\n    ],\r\n    years: [],\r\n  };\r\n\r\n  result.data[0].data.forEach((element) => {\r\n    myList.years.push(element.year);\r\n  });\r\n\r\n  return myList;\r\n}\r\n\r\nexport const addToDataList = (id, name) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=${id}`,\r\n      {\r\n        headers: {\r\n          \"X-API-KEY\": API_KEY,\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_TO_POPULATION_LIST_SUCCESS,\r\n      payload: separateData(data.result, id, name),\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_TO_POPULATION_LIST_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\nexport const removeToDataList = (id) => (dispatch, getState) => {\r\n  dispatch({ type: REMOVE_TO_POPULATION_LIST, payload: id });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToDataList, removeToDataList } from \"../actions/prefAction\";\r\n\r\nfunction CheckBox(props) {\r\n  const { prefecture } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addToDataList(prefecture.prefCode, prefecture.prefName));\r\n    } else {\r\n      dispatch(removeToDataList(prefecture.prefCode));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={prefecture.prefCode}\r\n        name={prefecture.prefName}\r\n        value={prefecture.prefCode}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <label htmlFor={prefecture.prefCode}>{prefecture.prefName}</label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { randomColor } from \"randomcolor\";\r\n\r\nfunction addData(list) {\r\n  let color = randomColor();\r\n  const demo = {\r\n    labels: [\r\n      1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015,\r\n      2020, 2025, 2030, 2035, 2040, 2045,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"demo\",\r\n        data: [\r\n          5039206, 5171800, 5184287, 5338206, 5575989, 5679439, 5643647,\r\n          5692321, 5683062, 5627737, 5506419, 5381733, 5216615, 5016554,\r\n          4791592, 4546357, 4280427, 4004973,\r\n        ],\r\n        borderColor: color,\r\n        backgroundColor: color,\r\n        yAxisID: \"y\",\r\n      },\r\n    ],\r\n  };\r\n  let labels = [];\r\n  list.forEach((element) => {\r\n    element.data.forEach((e) => {\r\n      let color = randomColor();\r\n      labels.push({\r\n        label: e.label,\r\n        data: e.dataList,\r\n        borderColor: color,\r\n        backgroundColor: color,\r\n        yAxisID: \"y\",\r\n      });\r\n    });\r\n  });\r\n  const data = {\r\n    labels: list.length > 0 ? list[0].years : demo.labels,\r\n    datasets: list.length > 0 ? labels : demo.datasets,\r\n  };\r\n  return data;\r\n}\r\n\r\nfunction addOptions() {\r\n  const options = {\r\n    responsive: true,\r\n    interaction: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n    },\r\n    stacked: false,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Chart.js Line Chart - Multi Axis\",\r\n      },\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          maxTicksLimit: 5,\r\n        },\r\n        // title: {\r\n        //   display: true,\r\n        //   text: \"\",\r\n        //   font: {\r\n        //     size: 15,\r\n        //   },\r\n        // },\r\n      },\r\n      y: {\r\n        type: \"linear\",\r\n        display: true,\r\n        position: \"left\",\r\n      },\r\n      y1: {\r\n        type: \"linear\",\r\n        display: true,\r\n        position: \"right\",\r\n\r\n        grid: {\r\n          drawOnChartArea: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return options;\r\n}\r\n\r\nfunction MyChart(props) {\r\n  const dataList = useSelector((state) => state.dataList);\r\n  const { message, list } = dataList;\r\n  const data = addData(list);\r\n  console.log(data);\r\n  const options = addOptions();\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyChart;\r\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPrefList } from \"./actions/prefAction\";\nimport CheckBox from \"./components/CheckBox\";\nimport MyChart from \"./components/MyChart\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPrefList());\n  }, [dispatch]);\n  const { loading, error, prefectures } = useSelector(\n    (state) => state.prefectureList\n  );\n\n  return (\n    <div className=\"App\">\n      <header>This is header</header>\n      <main className=\"row\">\n        {loading ? (\n          <div>Loading...</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <>\n            <div className=\"col-1-3\">\n              {prefectures.result.map((prefecture) => (\n                <div key={prefecture.prefCode} className=\"check-conatainer\">\n                  <CheckBox prefecture={prefecture}></CheckBox>\n                </div>\n              ))}\n            </div>\n            <div className=\"col-2-3\">\n              <div className=\"chart\">\n                <MyChart></MyChart>\n              </div>\n            </div>\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { dataListReducer, prefListReducer } from \"./reducers/prefReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  prefectureList: prefListReducer,\r\n  dataList: dataListReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import {\r\n  ADD_TO_POPULATION_LIST_FAIL,\r\n  ADD_TO_POPULATION_LIST_SUCCESS,\r\n  PREFECTURE_LIST_FAIL_SERVER,\r\n  PREFECTURE_LIST_FAIL_USER,\r\n  PREFECTURE_LIST_REQUEST,\r\n  PREFECTURE_LIST_SUCCESS,\r\n  REMOVE_TO_POPULATION_LIST,\r\n} from \"../constants/prefContants\";\r\n\r\nexport const prefListReducer = (\r\n  state = { loading: true, prefectures: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PREFECTURE_LIST_REQUEST:\r\n      return { loading: true };\r\n    case PREFECTURE_LIST_SUCCESS:\r\n      return { loading: false, prefectures: action.payload };\r\n    case PREFECTURE_LIST_FAIL_SERVER:\r\n      return { loading: false, message: action.payload };\r\n    case PREFECTURE_LIST_FAIL_USER:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const dataListReducer = (state = { list: [] }, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_POPULATION_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n        message: null,\r\n      };\r\n    case ADD_TO_POPULATION_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        message: action.payload,\r\n      };\r\n    case REMOVE_TO_POPULATION_LIST:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}